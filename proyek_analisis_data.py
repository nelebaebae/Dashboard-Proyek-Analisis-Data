# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q5IkWjnea6xoBMOBeNlR2n3kNbk1H8_P

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** [Input Nama]
- **Email:** [Input Email]
- **ID Dicoding:** [Input Username]

## Menentukan Pertanyaan Bisnis

- Bagaimana korelasi antara jumlah ulasan produk dan tingkat kepuasan pelanggan di setiap kategori produk dalam satu tahun terakhir?
- Apakah ada pola yang signifikan dalam metode pembayaran tertentu yang memengaruhi jumlah pembelian pada bulan-bulan tertentu?
- Kategori produk mana yang memiliki waktu pengiriman tercepat dan bagaimana hal ini memengaruhi jumlah penjualan per kategori dalam enam bulan terakhir?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

customers_df = pd.read_csv('customers_dataset.csv')
order_items_df = pd.read_csv('order_items_dataset.csv')
order_review_df = pd.read_csv('order_reviews_dataset.csv')
orders_df = pd.read_csv('orders_dataset.csv')
products_df = pd.read_csv('products_dataset.csv')
order_payments = pd.read_csv('order_payments_dataset.csv')

customers_df.head()

order_items_df.head()

order_review_df.head()

order_items_df.head()

products_df.head()

order_payments.head()

"""**Insight:**
- customers_dataset.csv: Informasi tentang pelanggan.
- order_reviews_dataset.csv: Informasi ulasan dari pelanggan.
- orders_dataset.csv: Informasi terkait pesanan pelanggan.
- order_items_dataset.csv: Informasi terkait detail barang dalam pesanan.
- products_dataset.csv : Infomrasi terkait detail product berisi kategori dan nama yang dibeli pelanggan
- order_payments.csv : Informasi terkait detail pembayaran yang dilakukan oleh pelanggan

### Assessing Data
"""

customers_duplicates = customers_df.duplicated().sum()
customers_missing_values = customers_df.isnull().sum()

customers_duplicates, customers_missing_values

order_review_duplicates = order_review_df.duplicated().sum()
order_review_missing_values = order_review_df.isnull().sum()

order_review_duplicates, order_review_missing_values

orders_dataset_duplicates = orders_df.duplicated().sum()
orders_dataset_missing_values = orders_df.isnull().sum()

orders_dataset_duplicates, orders_dataset_missing_values

orders_items_duplicates = order_items_df.duplicated().sum()
orders_items_missing_values = order_items_df.isnull().sum()

orders_items_duplicates, orders_items_missing_values

product_duplicates = products_df.duplicated().sum()
product_missing_values = products_df.isnull().sum()

product_duplicates, product_missing_values

order_payments_duplicates = order_payments.duplicated().sum()
order_payments_missing_values = order_payments.isnull().sum()

order_payments_duplicates, order_payments_missing_values

"""**Insight:**
- Tidak ada duplicated data
- Terdapat missing value pada orders_dataset, order_review dan products

### Cleaning Data
"""

order_review_df['review_comment_title'].fillna('No Comment', inplace=True)
order_review_df['review_comment_message'].fillna('No Comment', inplace=True)

orders_df_cleaned = orders_df.dropna(subset=['order_approved_at'])

orders_df_cleaned['order_delivered_customer_date'] = pd.to_datetime(orders_df_cleaned['order_delivered_customer_date'], errors='coerce')
orders_df_cleaned['order_purchase_timestamp'] = pd.to_datetime(orders_df_cleaned['order_purchase_timestamp'], errors='coerce')

orders_df_cleaned['order_delivered_carrier_date'].fillna('Unknown', inplace=True)
orders_df_cleaned['order_delivered_customer_date'].fillna('Unknown', inplace=True)

order_review_cleaned_missing_values = order_review_df.isnull().sum()
orders_cleaned_missing_values = orders_df_cleaned.isnull().sum()

order_review_cleaned_missing_values, orders_cleaned_missing_values

numerical_columns = ['product_name_lenght', 'product_description_lenght', 'product_photos_qty',
                     'product_weight_g', 'product_length_cm', 'product_height_cm', 'product_width_cm']
products_df[numerical_columns] = products_df[numerical_columns].fillna(products_df[numerical_columns].mean())

products_df = products_df.dropna(subset=['product_category_name'])
missing_values_after_drop = products_df.isnull().sum()

missing_values_after = products_df.isnull().sum()
missing_values_after

"""**Insight:**
- Semua missing values pada kolom review_comment_title dan review_comment_message telah diganti dengan 'No Comment'. Tidak ada lagi missing values di dataset ini
- Missing values pada kolom order_delivered_carrier_date dan order_delivered_customer_date telah diganti dengan 'Unknown'. Tidak ada lagi missing values di dataset ini.
- Missing values pada products ada yang ditanganin dengan rata-rata dan ada yang di drop datanya

## Exploratory Data Analysis (EDA)

### Explore Order_Review, Order Items, dan Products
"""

order_review_df['review_creation_date'] = pd.to_datetime(order_review_df['review_creation_date'], errors='coerce')

last_review_date = order_review_df['review_creation_date'].max()
one_year_ago = last_review_date - pd.DateOffset(years=1)
reviews_last_year = order_review_df[order_review_df['review_creation_date'] >= one_year_ago]

reviews_items_df = pd.merge(reviews_last_year, order_items_df, on='order_id', how='left')
reviews_items_products_df = pd.merge(reviews_items_df, products_df, on='product_id', how='left')

reviews_per_category = reviews_items_products_df.groupby('product_category_name').agg({
    'review_id': 'count',
    'review_score': 'mean'
}).reset_index()

reviews_per_category = reviews_per_category.sort_values(by='review_id', ascending=False)
reviews_per_category

"""**Insight:**
- Kategori Populer: Cama_mesa_banho dan beleza_saude memiliki ulasan terbanyak, menunjukkan produk-produk ini populer di kalangan pelanggan.

- Kepuasan Tinggi: Beleza_saude memiliki skor rata-rata 4.14, menunjukkan tingkat kepuasan yang tinggi.

- Perlu Peningkatan: Moveis_decoracao dan informatica_acessorios memiliki skor rata-rata lebih rendah, sekitar 3.88, yang menandakan perlunya perbaikan kualitas.

- Niche Sempurna: Cds_dvds_musicais dengan skor sempurna 5.00 menunjukkan kepuasan tinggi meski jumlah ulasan sedikit.

- Perhatian Khusus: Seguros_e_servicos hanya memiliki 1 ulasan dengan skor rendah 1.00, perlu ditingkatkan.

### Explore Order dan Payments
"""

orders_df['order_purchase_timestamp'] = pd.to_datetime(orders_df['order_purchase_timestamp'], errors='coerce')

payments_orders_df = pd.merge(order_payments, orders_df, on='order_id', how='left')

payments_orders_df['order_month'] = payments_orders_df['order_purchase_timestamp'].dt.to_period('M')

payments_per_method_month = payments_orders_df.groupby(['payment_type', 'order_month']).agg({
    'order_id': 'count'
}).reset_index()

all_months = pd.period_range(payments_orders_df['order_purchase_timestamp'].min().to_period('M'),
                             payments_orders_df['order_purchase_timestamp'].max().to_period('M'))

payment_types = payments_per_method_month['payment_type'].unique()
full_index = pd.MultiIndex.from_product([payment_types, all_months], names=['payment_type', 'order_month'])
payments_per_method_month_full = payments_per_method_month.set_index(['payment_type', 'order_month']).reindex(full_index, fill_value=0).reset_index()

payments_per_method_month_full

payments_per_method_month_full.sort_values(by='order_id',ascending = False, inplace=True)
payments_per_method_month_full

"""Insight :    
- Credit Card Selalu Ramai Diapkai
- Ada beberapa payment type yang not_defined
- Boleto kurang laku dibeberapa waktu

### Explore Order Item, Order dan Product
"""

items_orders_products_df = pd.merge(order_items_df, orders_df_cleaned, on='order_id', how='left')
items_orders_products_df = pd.merge(items_orders_products_df, products_df, on='product_id', how='left')

items_orders_products_df['order_purchase_timestamp'] = pd.to_datetime(items_orders_products_df['order_purchase_timestamp'])
items_orders_products_df['order_delivered_customer_date'] = pd.to_datetime(items_orders_products_df['order_delivered_customer_date'], errors='coerce')
items_orders_products_df['shipping_time_days'] = (items_orders_products_df['order_delivered_customer_date'] - items_orders_products_df['order_purchase_timestamp']).dt.days

latest_date = items_orders_products_df['order_purchase_timestamp'].max()
six_months_ago = latest_date - pd.DateOffset(months=6)
recent_data = items_orders_products_df[items_orders_products_df['order_purchase_timestamp'] >= six_months_ago]

shipping_time_per_category = recent_data.groupby('product_category_name')['shipping_time_days'].mean().reset_index()

sales_per_category = recent_data.groupby('product_category_name')['order_item_id'].count().reset_index()

result = pd.merge(shipping_time_per_category, sales_per_category, on='product_category_name', how='inner')
result.columns = ['product_category_name', 'average_shipping_time_days', 'total_sales']

result.sort_values(by='average_shipping_time_days').head(10)

result.sort_values(by='average_shipping_time_days',ascending = False)

result.sort_values(by='total_sales',ascending = False)

"""Insight :     
- Produk terlama sampai yaitu category moveis_escritorio
- dan Produk tercepat sampai yaitu PC Gamer
- Produk terbanyak yaitu belaza_saude
- Produk paling tidak laku adalah cds_dvds_musicais

## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

reviews_per_category = reviews_per_category.sort_values(by='review_id', ascending=False)

plt.figure(figsize=(12, 6))
sns.scatterplot(data=reviews_per_category, x='review_id', y='review_score', size='review_id', sizes=(40, 200), hue='review_score', palette='viridis', legend=False)
plt.title('Korelasi antara Jumlah Ulasan dan Tingkat Kepuasan Pelanggan per Kategori Produk (Satu Tahun Terakhir)')
plt.xlabel('Jumlah Ulasan')
plt.ylabel('Rata-rata Skor Ulasan')
plt.tight_layout()
plt.show()

correlation_value = reviews_per_category['review_id'].corr(reviews_per_category['review_score'])
correlation_value

"""- Korelasi Lemah: Korelasi rendah (0.055) menunjukkan tidak ada hubungan signifikan antara jumlah ulasan dan skor kepuasan.

- Sebaran Data: Kebanyakan kategori memiliki ulasan rendah dengan skor 3 hingga 4.5.

- Anomali: Beberapa kategori dengan ulasan sedikit memiliki skor ekstrem (1 atau 5), menunjukkan variasi pengalaman pelanggan.

### Pertanyaan 2:
"""

payments_per_method_month_full['order_month'] = payments_per_method_month_full['order_month'].astype(str)
filtered_payments_per_method_month = payments_per_method_month_full[
    ~payments_per_method_month_full['order_month'].isin(['2018-09', '2018-10']) &
    (payments_per_method_month_full['payment_type'] != 'not_defined')
]


# Replot the graph with the corrected data types

plt.figure(figsize=(14, 7))

sns.lineplot(data=filtered_payments_per_method_month, x='order_month', y='order_id', hue='payment_type', marker='o')

plt.title('Jumlah Pesanan per Metode Pembayaran (Per Bulan)')

plt.xlabel('Bulan')

plt.ylabel('Jumlah Pesanan')

plt.xticks(rotation=45)

plt.legend(title='Metode Pembayaran')

plt.tight_layout()

plt.show()

"""**Insight:**
- Credit Card Dominan: Penggunaan credit card meningkat tajam dan konsisten, terutama sejak pertengahan 2017.

- Boleto Stabil: Metode boleto mengalami pertumbuhan bertahap tetapi stabil.

- Metode Lain Rendah: Debit card dan voucher memiliki jumlah pesanan rendah dan cenderung stabil.

- Pola Signifikan: Hanya credit card yang menunjukkan pola peningkatan signifikan; metode lain relatif stabil tanpa pola musiman.

Pola yang paling signifikan terlihat pada penggunaan credit card, yang mengalami peningkatan konsisten dan signifikan dari bulan ke bulan. Tidak ada pola musiman yang jelas terlihat pada metode pembayaran lainnya seperti boleto, debit card, atau voucher, yang cenderung lebih stabil dengan sedikit variasi.

### Pertanyaan 3
"""

top_10_fastest_shipping = result.sort_values(by='average_shipping_time_days').head(10)

plt.figure(figsize=(12, 6))

sns.barplot(x='product_category_name', y='average_shipping_time_days', data=top_10_fastest_shipping, palette='Blues_d')

plt.xlabel('Kategori Produk', fontsize=12)
plt.ylabel('Waktu Pengiriman Rata-rata (Hari)', fontsize=12)
plt.title('Top 10 Kategori Produk dengan Waktu Pengiriman Tercepat (6 bulan terakhir)', fontsize=14)
plt.xticks(rotation=90)

ax2 = plt.twinx()
sns.lineplot(x='product_category_name', y='total_sales', data=top_10_fastest_shipping, color='orange', marker="o", label='Total Penjualan')

ax2.set_ylabel('Total Penjualan', fontsize=12)
ax2.legend(loc='upper left')

plt.tight_layout()
plt.show()

"""- Kategori dengan Pengiriman Tercepat: Pc_gamer memiliki waktu pengiriman rata-rata tercepat, kurang dari 2 hari. Diikuti oleh fashion_roupa_infanto_juvenil dan artes_e_artesanato yang juga memiliki waktu pengiriman cepat.

- Jumlah Penjualan dan Pengiriman: Kategori dengan waktu pengiriman yang cepat seperti pc_gamer dan fashion_roupa_infanto_juvenil memiliki jumlah penjualan yang relatif rendah. Sebaliknya, kategori dengan waktu pengiriman lebih lama seperti alimentos dan bebidas justru memiliki jumlah penjualan yang lebih tinggi.

- Hubungan Pengiriman dan Penjualan: Tidak ada korelasi yang jelas antara waktu pengiriman cepat dengan jumlah penjualan. Beberapa kategori dengan waktu pengiriman lebih lama justru memiliki penjualan yang lebih besar, sementara kategori dengan pengiriman cepat memiliki penjualan yang lebih sedikit.

## Analisis Lanjutan (Opsional)
"""

latest_date = items_orders_products_df['order_purchase_timestamp'].max()
six_months_ago = latest_date - pd.DateOffset(months=6)
recent_data = items_orders_products_df[items_orders_products_df['order_purchase_timestamp'] >= six_months_ago]

"""## Conclusion

- Conclution pertanyaan 1
- Conclution pertanyaan 2
"""